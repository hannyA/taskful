<% layout('templates/home-template') %>

<section class="container-fluid">
  <div class="row">
    <div class="col-6 auth-img-container">
      <img
        class="img-fluid auth-img"
        src="/images/signup.png"
        alt="Signin image"
      />
    </div>
    <div class="col-6 auth-form">
      <h1 class="my-5 text-center">Create a new account</h1>

      <form
        class="needs-validation"
        action="/api/v1/auth/register"
        method="post"
        novalidate
      >
        <div class="mb-3">
          <div class="row">
            <div class="col-6">
              <label class="form-label" for="firstname">First Name:</label>
              <input
                class="form-control"
                name="firstname"
                id="firstname"
                type="text"
                required
                minlength="2"
                maxlength="30"
                value="<%=  body.firstname %>"
              />
              <div class="invalid-feedback">Provide valid first name</div>
            </div>

            <div class="col-6">
              <label class="form-label" for="lastname">Last Name:</label>
              <input
                class="form-control"
                name="lastname"
                id="lastname"
                type="text"
                required
                minlength="2"
                maxlength="30"
                value="<%=  body.lastname %>"
              />
              <div class="invalid-feedback">Provide valid last name</div>
            </div>
          </div>
        </div>
        <div class="mb-3">
          <label class="form-label" for="company">Company:</label>
          <input
            class="form-control"
            name="Company"
            id="company"
            type="text"
            required
            maxlength="30"
            value="<%=  body.Company %>"
          />
          <div class="invalid-feedback">Provide valid Company</div>
        </div>
        <div class="mb-3">
          <label class="form-label" for="email">Email:</label>
          <input
            class="form-control"
            name="Email"
            id="email"
            type="email"
            required
            minlength="2"
            maxlength="30"
            value="<%=  body.Email %>"
          />
          <div class="invalid-feedback">Provide valid Email</div>
        </div>
        <div class="mb-3">
          <label class="form-label" for="password">Password:</label>
          <input
            class="form-control"
            name="Password"
            id="password"
            type="password"
            autocomplete="new-password"
            required
            minlength="6"
            maxlength="15"
          />
          <div class="invalid-feedback">
            Provide valid Password between 6-15 characters
          </div>
        </div>

        <div class="mb-3">
          <label class="form-label" for="confirmpassword"
            >Confirm Password:</label
          >
          <input
            class="form-control valid"
            name="Confirmpassword"
            id="confirmpassword"
            type="password"
            autocomplete="new-password"
            required
          />
          <div class="invalid-feedback">Passwords do not match</div>
        </div>

        <div class="mb-3">
          <label class="form-label" for="role">Role</label>
          <select class="form-select" name="Role" id="role" required>
            <!-- <option selected>Status</option> -->
            <option <%= ( body.role && body.role === "Admin" ) ? "selected" : "" %> value="Admin">Admin</option>
            <option <%= ( body.role && body.role === "Technician" ) ? "selected" : "" %> value="Technician">Technician</option>
            <option <%= ( body.role && body.role === "User" ) ? "selected" : "" %> value="User">User</option>
          </select>
        </div>
        <div class="form-check form-check-inline ms-4">
          <input class="form-check-input" type="checkbox" id="demo" name="demo"
          <%= body.demo === 'on' ? checked : "" %> />
          <label class="form-check-label" for="demo"> Demo </label>
        </div>

        <!-- Button trigger modal -->
        <button type="submit" class="btn btn-outline-dark btn-lg">
          Sign up
        </button>

        <!-- Modal -->
        <div
          class="modal"
          id="loadingModal"
          data-bs-backdrop="static"
          data-bs-keyboard="false"
          tabindex="-1"
          aria-labelledby="staticBackdropLabel"
          aria-hidden="true"
        >
          <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
              <div class="modal-header justify-content-center">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">
                  ... Setting up demo
                </h1>
              </div>
              <div class="modal-body text-center">
                <div class="spinner-grow loading-color" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
                <div class="spinner-grow loading-color" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
                <div class="spinner-grow loading-color" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </form>
      <p class="mt-3">
        Already have an account? <a href="/api/v1/auth/login">Sign in</a>
      </p>
    </div>
  </div>
</section>

<script type="importmap">
  {
    "imports": {
      "@popperjs/core": "https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js",
      "bootstrap": "https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.esm.min.js"
    }
  }
  </script>
  
<script type="module">
  // import { Toast } from 'bootstrap.esm.min.js'
  
  import * as bootstrap from 'bootstrap'


  function isDemo() {
    const demoEl = document.getElementById("demo");
    console.log("IS demo checked?", demoEl.checked); // false
    if (!demoEl.checked) {
      console.log("hide loadingModal");

      const myModal = new bootstrap.Modal(document.getElementById('loadingModal'))
      // const myModal = document.getElementById("loadingModal");
      myModal.show();

      // loadingModal.style.display = "none";
    } else {
      const myModal = new bootstrap.Modal(document.getElementById('loadingModal'))
      // const myModal = document.getElementById("loadingModal");
      myModal.show();
    }
  }

  function valid(ele) {
    ele.classList.add("is-valid");
    ele.classList.remove("is-invalid");
  }
  function invalid(ele) {
    ele.classList.remove("is-valid");
    ele.classList.add("is-invalid");
  }

  function validateLastName() {
    const lname = document.getElementById("lastname");
    if (lname.value.length > 1) {
      valid(lname);
      return true
    } else {
      invalid(lname);
      return false
    }
  }

  function validateFirstName() {
    const fname = document.getElementById("firstname");
    if (fname.value.length > 1) {
      valid(fname);
      return true
    } else {
      invalid(fname);
      return false
    }
  }

  function validateCompany() {
    const company = document.getElementById("company");
    if (company.value.length > 0) {
      valid(company);
      return true
    } else {
      invalid(company);
      return false
    }
  }

  const validateRegEmail = (email) => {
    return email.match(
      /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
    );
  };

  function validateEmail() {
    const email = document.getElementById("email");

    const emailRegExp =
      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
    // const isValid = email.value.length > 0 && emailRegExp.test(email.value);
    const isValid = email.value.length > 0 && validateRegEmail(email.value);


    if (isValid) {
      valid(email);
      return true
    } else {
      invalid(email);
      return false
    }
  }

  function validatePassword() {
    const password = document.getElementById("password");
    if (password.value.length >= 6 && password.value.length <= 15) {
      valid(password);
      return true;
    } else {
      invalid(password);
      return false
    }
  }

  function checkPasswordMatch() {
    const password = document.getElementById("password");
    const confirmpassword = document.getElementById("confirmpassword");
    if (
      password.value.length > 0 &&
      confirmpassword.value.localeCompare(password.value) === 0
    ) {
      valid(confirmpassword);
      return true
    } else {
      invalid(confirmpassword);
      return false
    }
  }

  // Example starter JavaScript for disabling form submissions if there are invalid fields
  (() => {
    "use strict";

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    const forms = document.querySelectorAll(".needs-validation");

    // Loop over them and prevent submission
    Array.from(forms).forEach((form) => {
      form.addEventListener(
        "submit",
        (event) => {

          console.log("++++ checking !form.checkValidity()");

          // if (!form.checkValidity()) {
          //   console.log("!form.checkValidity()");
          //   event.preventDefault();
          //   event.stopPropagation();
          // } else {
          //   console.log("is ok?");
          //   isDemo();
          // }


          //Add callbacks

          //validate names
          const fname = document.getElementById("firstname");
          fname.addEventListener("input", validateFirstName);
          const lname = document.getElementById("lastname");
          lname.addEventListener("input", validateLastName);

          //validate email
          const company = document.getElementById("company");
          company.addEventListener("input", validateCompany);

          //validate email
          const email = document.getElementById("email");
          email.addEventListener("input", validateEmail);

          //validate passwords
          const confirmpassword = document.getElementById("confirmpassword");
          confirmpassword.addEventListener("input", checkPasswordMatch);
          const password = document.getElementById("password");
          password.addEventListener("input", checkPasswordMatch);
          password.addEventListener("input", validatePassword);



          //validate names
          let isFirstValid    = validateFirstName(fname);
          let isLastValid     = validateLastName(lname);
          let isCompanyValid  = validateCompany();
          let isEmailValid    = validateEmail();
          let isPasswordValid = validatePassword();
          let isMatchingValid = checkPasswordMatch();


          if (!(isFirstValid && isLastValid && isCompanyValid && isEmailValid && isPasswordValid && isMatchingValid)) {
            console.log("!form.checkValidity()");
            event.preventDefault();
            event.stopPropagation();
          } else {
            console.log("is ok?");
            isDemo();
          }
          
        },
        false
      );
    });
  })();
</script>
