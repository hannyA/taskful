<% layout('templates/dashboard-template') %>
<!-- <nav style="--bs-breadcrumb-divider: '>'" aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item active" aria-current="page">Dashboard</li>
  </ol>
</nav> -->
<div class="row mb-5">
  <div class="col-3 offset-4"><h1 class="">Company Dashboard</h1></div>
</div>

<!-- <h1 class="text-center">Dashboard</h1> -->
<%= success %>
<div class="container-fluid">
  <div class="row">
    <div class="col-6 dashboard-chart-div d-flex justify-content-center">
      <div class="dashboard-chart">
        <canvas id="myChart" class=""></canvas>
        <p class="text-center dashboard-title">Total Projects Priority</p>
      </div>
    </div>

    <div class="col-6 dashboard-chart-div d-flex justify-content-center">
      <div class="dashboard-chart">
        <canvas id="myChart2"></canvas>
        <p class="text-center dashboard-title">Total Projects Progress</p>
      </div>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  let low = <%= stats.companyPriorityProjects.low %>
  let med = <%= stats.companyPriorityProjects.medium %>
  let high = <%= stats.companyPriorityProjects.high %>
  let vhigh = <%= stats.companyPriorityProjects.vhigh %>

  const total = low + med + high + vhigh;

  if (total === 0 ) {
    const ctx = document.getElementById("myChart");
    const data = {
      labels: ["None"],
      datasets: [
        {
          label: "Priority",
          data: [1],
          backgroundColor: ["rgb(54, 162, 235)"],
          // hoverOffset: 4,
        },
      ],
    };
    new Chart(ctx, {
      type: "pie",
      data: data,
      options: {
        animations: false
      }
    });
  } else {

    const ctx = document.getElementById("myChart");
    const data = {
      labels: ["Low", "Medium", "High", "Very High"],
      datasets: [
        {
          label: "Priority",
          data: [low, med, high, vhigh],
          backgroundColor: [
            "rgb(255, 224, 20)",
            "rgb(250, 163, 7)",
            "rgb(232, 93, 4)",
            "rgb(208,0,0)",
          ],
        },
      ],
    };
    new Chart(ctx, {
      type: "pie",
      data: data,
      options: {
        animations: false
      }
    });
  }


  let _new = <%= stats.companyProgressProjects.new %>;
  let complete = <%= stats.companyProgressProjects.complete %>;
  let cancel = <%= stats.companyProgressProjects.cancel %> ;
  let hold = <%= stats.companyProgressProjects.hold %>;
  let progress = <%= stats.companyProgressProjects.progress %>;

  let t = _new + complete + cancel + hold + progress;

  if (t === 0) {
    const ctx2 = document.getElementById("myChart2");
    const data2 = {
      labels: ["None"],
      datasets: [
        {
          label: "Tasks",
          data: [1],
          backgroundColor: ["rgb(54, 162, 235)"],
        },
      ],
    };
    new Chart(ctx2, {
      type: "pie",
      data: data2,
      options: {
        animations: false
      }
    });
  } else {
    const ctx2 = document.getElementById("myChart2");
    const data2 = {
      labels: ["New", "In Progress", "Held", "Complete", "Canceled"],
      datasets: [
        {
          label: "Tasks",
          data: [_new, progress, hold, complete, cancel],
          backgroundColor: [
            "rgb(224, 170, 255)",
            "rgb(199, 125, 255)",
            "rgb(157, 78, 221)",
            "rgb(123, 44, 191)",
            "rgb(39, 15, 62)",
          ],
          // hoverOffset: 4,
        },
      ],
    };
    new Chart(ctx2, {
      type: "pie",
      data: data2,
      options: {
        animations: false
      }
    });
  }
</script>
