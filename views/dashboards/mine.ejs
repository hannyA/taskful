<% layout('templates/dashboard-template') %>
<!-- <nav style="--bs-breadcrumb-divider: '>'" aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item active" aria-current="page">Dashboard</li>
  </ol>
</nav> -->
<!-- <div class="row my-3">
  <div class="col-4 offset-4"><h1 class="">My Dashboard</h1></div>
</div> -->

<!-- <h1 class="text-center">Dashboard</h1> -->
<%= success %>
<div class="container-fluid">
  <div class="row mt-3 mb-2">
    <div class="col-3 offset-5"><h2 class="">Projects</h2></div>
  </div>

  <div class="row">
    <div class="col-6 dashboard-chart-div d-flex justify-content-center">
      <div class="dashboard-chart">
        <canvas id="projects-pri"></canvas>
        <p class="text-center dashboard-title">Projects priority</p>
      </div>
    </div>
    <div class="col-6 dashboard-chart-div d-flex justify-content-center">
      <div class="dashboard-chart">
        <canvas id="projects-prog"></canvas>
        <p class="text-center dashboard-title">Projects progress</p>
      </div>
    </div>
  </div>
  <div class="row mt-3 mb-2">
    <div class="col-3 offset-5"><h2 class="">Issues</h2></div>
  </div>
  <div class="row">
    <div class="col-6 dashboard-chart-div d-flex justify-content-center">
      <div class="dashboard-chart">
        <canvas id="issues-pri"></canvas>
        <p class="text-center dashboard-title">Issues priority</p>
      </div>
    </div>
    <div class="col-6 dashboard-chart-div d-flex justify-content-center">
      <div class="dashboard-chart">
        <canvas id="issues-prog"></canvas>
        <p class="text-center dashboard-title">Issues progress</p>
      </div>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>

  let low = <%= stats.userPriorityProjects.low %>
  let med = <%= stats.userPriorityProjects.medium %>
  let high = <%= stats.userPriorityProjects.high %>
  let vhigh = <%= stats.userPriorityProjects.vhigh %>

  const ctx1 = document.getElementById("projects-pri");
  let data;
  if (low + med + high + vhigh === 0 ) {
    data = {
      labels: ["None"],
      datasets: [{
        label: "Priority",
        data: [1],
        backgroundColor: ["rgb(54, 162, 235)"],
      }],
    };
  } else {
    data = {
      labels: ["Low", "Medium", "High", "Very High"],
      datasets: [
        {
          label: "Priority",
          data: [low, med, high, vhigh],
          backgroundColor: [
            "rgb(255, 224, 20)",
            "rgb(250, 163, 7)",
            "rgb(232, 93, 4)",
            "rgb(208,0,0)",
          ],
        },
      ],
    };
  }
  new Chart(ctx1, {
    type: "pie",
    data: data,
    options: {
        animations: false
      }
  });


  let _new = <%= stats.userProgressProjects.new %>
  let complete = <%= stats.userProgressProjects.complete %>
  let cancel = <%= stats.userProgressProjects.cancel %>
  let hold = <%= stats.userProgressProjects.hold %>
  let progress = <%= stats.userProgressProjects.progress %>

  const ctx2 = document.getElementById("projects-prog");
  let data2;
  if ( _new + complete + cancel + hold + hold === 0 ) {
    data2 = {
      labels: ["None"],
      datasets: [
        {
          label: "Tasks",
          data: [1],
          backgroundColor: [ "rgb(54, 162, 235)"]
        },
      ],
    };
  } else {
      data2 = {
        labels: ["New", "In Progress", "Held", "Complete", "Canceled"],
      datasets: [
        {
          label: "Tasks",
          data: [_new, progress, hold, complete, cancel],
          backgroundColor: [
            "rgb(224, 170, 255)",
            "rgb(199, 125, 255)",
            "rgb(157, 78, 221)",
            "rgb(123, 44, 191)",
            "rgb(39, 15, 62)",
          ],
          // hoverOffset: 4,
        },
      ],
    };
  }
  new Chart(ctx2, {
    type: "pie",
    data: data2,
    options: {
        animations: false
      }
  });


  low = <%= stats.issuePriority.low %>
  med = <%= stats.issuePriority.medium %>
  high = <%= stats.issuePriority.high %>
  vhigh = <%= stats.issuePriority.vhigh %>

  const ctx3 = document.getElementById("issues-pri");
  let data3;
  if (low + med + high + vhigh === 0 ) {
    data3 = {
      labels: ["None"],
      datasets: [{
        label: "Priority",
        data: [1],
        backgroundColor: ["rgb(54, 162, 235)"],
      }],
    };
  } else {
    data3 = {
      labels: ["Low", "Medium", "High", "Very High"],
      datasets: [
        {
          label: "Priority",
          data: [low, med, high, vhigh],
          backgroundColor: [
            "rgb(255, 224, 20)",
            "rgb(250, 163, 7)",
            "rgb(232, 93, 4)",
            "rgb(208,0,0)",
          ],
        },
      ],
    };
  }
  new Chart(ctx3, {
    type: "pie",
    data: data3,
    options: {
        animations: false
      }
  });

  _new = <%= stats.issueStatus.new %>
  assign = <%= stats.issueStatus.assign %>
  progress = <%= stats.issueStatus.progress %>
  solve = <%= stats.issueStatus.solve %>
  close = <%= stats.issueStatus.close %>

  const ctx4 = document.getElementById("issues-prog");
  let data4;
  if ( _new + assign + progress + solve + close === 0 ) {
    data4 = {
      labels: ["None"],
      datasets: [
        {
          label: "Tasks",
          data: [1],
          backgroundColor: ["rgb(54, 162, 235)"],
        },
      ],
    };
  } else {
    data4 = {
      labels: ["New", "In Progress", "Held", "Complete", "Canceled"],
      datasets: [
        {
          label: "Tasks",
          data: [_new, progress, hold, complete, cancel],
          backgroundColor: [
            "rgb(224, 170, 255)",
            "rgb(199, 125, 255)",
            "rgb(157, 78, 221)",
            "rgb(123, 44, 191)",
            "rgb(39, 15, 62)",
          ],
          // hoverOffset: 4,
        },
      ],
    };
  }
  new Chart(ctx4, {
    type: "pie",
    data: data4,
    options: {
        animations: false
      }
  });
</script>
