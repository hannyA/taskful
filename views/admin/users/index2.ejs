<% layout('templates/admins-template') %>

<div
  id="alert-message-container"
  class="alert alert-danger alert-dismissible d-none show fade"
  role="alert"
>
  <div id="alert-message"></div>
  <button
    type="button"
    class="btn-close"
    data-bs-dismiss="alert"
    aria-label="Close"
  ></button>
</div>

<div class="row mt-2 mb-5">
  <div class="col-5 offset-4">
    <h1 class="">Users</h1>
  </div>
</div>

<div>
  <nav class="navbar bg-body-tertiary">
    <div class="container-fluid">
      <ul class="nav nav-pills">
        <li class="nav-item">
          <a href="/api/v1/admin/users/new" class="nav-link">New User</a>
        </li>
        <li class="nav-item">
          <button
            id="delete-user"
            class="btn nav-link disabled"
            type="button"
            onclick="deleteUserss()"
          >
            Delete
          </button>
          <!-- 
          <form action="/api/v1/admin/users?_method=DELETE " method="POST">
            <a href="" class="nav-link disabled">Delete</a>
          </form> -->
        </li>
        <li class="nav-item">
          <a
            href="/api/v1/admin/users/edit"
            id="edit-user"
            class="nav-link disabled"
            >Edit User</a
          >
        </li>
      </ul>
      <!-- <form class="d-flex" role="search">
        <input
          class="form-control me-2"
          type="search"
          placeholder="Search"
          aria-label="Search"
        />
        <button class="btn btn-outline-success" type="submit">Search</button>
      </form> -->
    </div>
  </nav>
  <div>
    <form
      id="delete-form"
      action="/api/v1/admin/users?_method=DELETE "
      method="POST"
    >
      <table class="table">
        <thead>
          <tr>
            <th scope="col"></th>
            <th scope="col">First Name</th>
            <th scope="col">Last Name</th>
            <th scope="col">Role</th>
            <th scope="col">Email</th>
            <th scope="col" hidden>User ID</th>
          </tr>
        </thead>
        <tbody>
          <%= console.log("User count: ", users.length )%> <% for (let user of
          users) { %>
          <tr class="user-row">
            <td class="">
              <div class="form-check">
                <input
                  class="form-check-input"
                  type="checkbox"
                  name="users[]"
                  value="<%= user.id %>"
                  id="flexCheckChecked"
                  onclick="checkedBox()"
                />
              </div>
            </td>
            <td><%= user.first %></td>
            <td><%= user.last %></td>
            <td><%= user.role %></td>
            <td><%= user.email %></td>
            <td hidden><%= user.id %></td>
          </tr>

          <% }%>
        </tbody>
      </table>
    </form>
  </div>

  <footer class="mt-5"></footer>
</div>

<script>
  let dUsers = [];

  function checkedBox() {
    console.log("checkedBox: ", dUsers);

    dUsers = [];
    const deleteElement = document.getElementById("delete-user");
    deleteElement.classList.add("disabled");

    let inputs = document.getElementsByClassName("form-check-input");
    for (let i = 0; i < inputs.length; i++) {
      let parentNode = inputs[i].parentNode.parentNode.parentNode; //tr

      if (inputs[i].type === "checkbox") {
        console.log("inputs[i]: ", i, inputs[i]);
        let input = inputs[i];

        console.log("input: ", input.checked);
        console.log("inputs[i]: ", i, inputs[i].checked);
        if (inputs[i].checked === true) {
          console.log("checked here");
          let id = parentNode.getElementsByTagName("td")[5].innerHTML;
          dUsers.push(id);
          deleteElement.classList.remove("disabled");
        } else {
          inputs[i].checked = false;
        }
      }
    }

    const editElement = document.getElementById("edit-user");
    if (dUsers.length === 1) {
      editElement.classList.remove("disabled");

      editElement.setAttribute(
        "href",
        "/api/v1/admin/users/edit?id=" + dUsers[0]
      );
    } else {
      editElement.classList.add("disabled");
    }
    // console.log("dUsers: ", dUsers);
  }

  const deleteUserss = async () => {
    console.log("index2 : ");
    console.log("deleteUsers : ", dUsers);

    var form = document.getElementById("delete-form");
    form.submit();
  };

  const removeRows = () => {
    let inputs = document.getElementsByClassName("form-check-input");
    for (let i = 0; i < inputs.length; i++) {
      let parentNode = inputs[i].parentNode.parentNode.parentNode; //tr

      if (dUsers.includes(parentNode.getElementsByTagName("td")[5].innerHTML)) {
        parentNode.remove();
        i--;
      }
    }
  };

  window.onload = function () {
    checkedBox();
  };
</script>
